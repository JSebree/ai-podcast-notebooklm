name: Daily Tech Digest

on:
  schedule:
    # 8 AM Eastern ‚Üí 12:00 UTC
    - cron: '0 12 * * *'
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: üõéÔ∏è Checkout repository
      uses: actions/checkout@v4

    - name: üêç Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: üîê Validate required secrets
      env:
        GOOGLE_SERVICE_ACCOUNT:  ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
        GOOGLE_DRIVE_FOLDER_ID:  ${{ secrets.GOOGLE_DRIVE_FOLDER_ID }}
        SHARE_WITH_EMAIL:        ${{ secrets.SHARE_WITH_EMAIL }}
        NEWSDATA_API_KEY:        ${{ secrets.NEWSDATA_API_KEY }}
        YOUTUBE_API_KEY:         ${{ secrets.YOUTUBE_API_KEY }}
        OPENAI_API_KEY:          ${{ secrets.OPENAI_API_KEY }}
        TWITTER_BEARER_TOKEN:    ${{ secrets.TWITTER_BEARER_TOKEN }}
      run: |
        set -e
        missing=0
        for var in \
          GOOGLE_SERVICE_ACCOUNT GOOGLE_DRIVE_FOLDER_ID SHARE_WITH_EMAIL \
          NEWSDATA_API_KEY YOUTUBE_API_KEY OPENAI_API_KEY TWITTER_BEARER_TOKEN
        do
          if [ -z "${!var}" ]; then
            echo "‚ùå Secret $var is missing" >&2
            missing=1
          else
            echo "‚úÖ Secret $var present"
          fi
        done
        [ "$missing" -eq 0 ] || { echo "Aborting‚Äîone or more secrets missing." >&2; exit 1; }

    - name: üì¶ Install dependencies
      run: pip install -r requirements.txt

    - name: ü©∫ Smoke-test Newsdata API
      env:
        NEWSDATA_API_KEY: ${{ secrets.NEWSDATA_API_KEY }}
      run: |
        echo "Key prefix: ${NEWSDATA_API_KEY:0:6}"
        response="$(curl --silent --show-error --get https://newsdata.io/api/1/news \
          --data apikey=${NEWSDATA_API_KEY} \
          --data language=en \
          --data q="technology" \
          --write-out '\nHTTP_STATUS:%{http_code}')"
        body="${response%HTTP_STATUS*}"
        status="${response##*HTTP_STATUS:}"
        echo "HTTP status: $status"
        echo "$body" | head -c 300
        [ "$status" -eq 200 ] || { echo "‚ùå Newsdata smoke-test failed"; exit 1; }

    - name: üìÑ Smoke-test DocCreator alone
      env:
        GOOGLE_SERVICE_ACCOUNT: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
        GOOGLE_DRIVE_FOLDER_ID: ${{ secrets.GOOGLE_DRIVE_FOLDER_ID }}
        SHARE_WITH_EMAIL:       ${{ secrets.SHARE_WITH_EMAIL }}
      run: |
        python - <<'PY'
        import sys, logging
        from utils.google_docs_utils import create_daily_doc

        logging.basicConfig(level=logging.DEBUG)
        dummy = [{
            "headline": "Smoke Test",
            "date": "1970-01-01",
            "summary": "Testing DocCreator alone.",
            "podcast_title": "Smoke Podcast",
            "links": []
        }]
        try:
            url = create_daily_doc(dummy)
            print("[SMOKE] create_daily_doc returned ‚Üí", url, file=sys.stderr)
        except Exception as e:
            print("[SMOKE] create_daily_doc threw ‚Üí", type(e).__name__, e, file=sys.stderr)
            sys.exit(1)
        PY

    - name: üöÄ Run full CrewAI workflow
      env:
        GOOGLE_SERVICE_ACCOUNT:  ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
        GOOGLE_DRIVE_FOLDER_ID:  ${{ secrets.GOOGLE_DRIVE_FOLDER_ID }}
        SHARE_WITH_EMAIL:        ${{ secrets.SHARE_WITH_EMAIL }}
        NEWSDATA_API_KEY:        ${{ secrets.NEWSDATA_API_KEY }}
        YOUTUBE_API_KEY:         ${{ secrets.YOUTUBE_API_KEY }}
        OPENAI_API_KEY:          ${{ secrets.OPENAI_API_KEY }}
        TWITTER_BEARER_TOKEN:    ${{ secrets.TWITTER_BEARER_TOKEN }}
      run: |
        set -e
        python crewai_workflow.py
