name: Daily Tech Digest

on:
  schedule:
    # 8 AM ET  โ  12:00 UTC
    - cron: "0 12 * * *"
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    # โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
    - name: Validate secrets
      env:
        GOOGLE_SERVICE_ACCOUNT:  ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
        GOOGLE_DRIVE_FOLDER_ID:  ${{ secrets.GOOGLE_DRIVE_FOLDER_ID }}
        NEWSDATA_API_KEY:        ${{ secrets.NEWSDATA_API_KEY }}
        YOUTUBE_API_KEY:         ${{ secrets.YOUTUBE_API_KEY }}
        OPENAI_API_KEY:          ${{ secrets.OPENAI_API_KEY }}
        TWITTER_BEARER_TOKEN:    ${{ secrets.TWITTER_BEARER_TOKEN }}
        TWILIO_ACCOUNT_SID:      ${{ secrets.TWILIO_ACCOUNT_SID }}
        TWILIO_AUTH_TOKEN:       ${{ secrets.TWILIO_AUTH_TOKEN }}
        TWILIO_FROM_NUMBER:      ${{ secrets.TWILIO_FROM_NUMBER }}
        NOTIFY_PHONE:            ${{ secrets.NOTIFY_PHONE }}
        SMTP_USER:               ${{ secrets.SMTP_USER }}
        SMTP_PASS:               ${{ secrets.SMTP_PASS }}
        SMTP_HOST:               ${{ secrets.SMTP_HOST }}
        SMTP_PORT:               ${{ secrets.SMTP_PORT }}
        NOTIFY_EMAIL:            ${{ secrets.NOTIFY_EMAIL }}
      run: |
        set -e
        missing=0
        for var in \
          GOOGLE_SERVICE_ACCOUNT GOOGLE_DRIVE_FOLDER_ID NEWSDATA_API_KEY \
          YOUTUBE_API_KEY OPENAI_API_KEY TWITTER_BEARER_TOKEN \
          TWILIO_ACCOUNT_SID TWILIO_AUTH_TOKEN TWILIO_FROM_NUMBER NOTIFY_PHONE \
          SMTP_USER SMTP_PASS SMTP_HOST SMTP_PORT NOTIFY_EMAIL
        do
          if [ -z "${!var}" ]; then
            echo "โ  $var is missing" >&2
            missing=1
          else
            echo "โ  $var present"
          fi
        done
        [ "$missing" -eq 0 ] || { echo "Secrets missing โ abort"; exit 1; }

    # โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
    - name: Install dependencies
      run: pip install -r requirements.txt

    # โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
    - name: ๐ฉบ  Smoke-test Newsdata
      env:
        NEWSDATA_API_KEY: ${{ secrets.NEWSDATA_API_KEY }}
      run: |
        echo "Key prefix: ${NEWSDATA_API_KEY:0:6}"
        response="$(curl --silent --show-error --get https://newsdata.io/api/1/news \
          --data apikey=${NEWSDATA_API_KEY} \
          --data category=technology \
          --data language=en \
          --data page=0 \
          --write-out '\nHTTP_STATUS:%{http_code}' )"
        body="${response%HTTP_STATUS*}"
        status="${response##*HTTP_STATUS:}"
        echo "HTTP status: $status"
        echo "Body preview:"
        echo "$body" | head -c 300
        if [[ "$status" -ne 200 ]]; then
          echo "โ  Newsdata API smoke-test failed."
          exit 1
        fi

    # โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
    - name: ๐  Run CrewAI workflow
      env:
        GOOGLE_SERVICE_ACCOUNT:  ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
        GOOGLE_DRIVE_FOLDER_ID:  ${{ secrets.GOOGLE_DRIVE_FOLDER_ID }}
        NEWSDATA_API_KEY:        ${{ secrets.NEWSDATA_API_KEY }}
        YOUTUBE_API_KEY:         ${{ secrets.YOUTUBE_API_KEY }}
        OPENAI_API_KEY:          ${{ secrets.OPENAI_API_KEY }}
        TWITTER_BEARER_TOKEN:    ${{ secrets.TWITTER_BEARER_TOKEN }}
        TWILIO_ACCOUNT_SID:      ${{ secrets.TWILIO_ACCOUNT_SID }}
        TWILIO_AUTH_TOKEN:       ${{ secrets.TWILIO_AUTH_TOKEN }}
        TWILIO_FROM_NUMBER:      ${{ secrets.TWILIO_FROM_NUMBER }}
        NOTIFY_PHONE:            ${{ secrets.NOTIFY_PHONE }}
        SMTP_USER:               ${{ secrets.SMTP_USER }}
        SMTP_PASS:               ${{ secrets.SMTP_PASS }}
        SMTP_HOST:               ${{ secrets.SMTP_HOST }}
        SMTP_PORT:               ${{ secrets.SMTP_PORT }}
        NOTIFY_EMAIL:            ${{ secrets.NOTIFY_EMAIL }}
        SHARE_WITH_EMAIL:        ${{ secrets.SHARE_WITH_EMAIL }}
      run: |
        set -e
        python crewai_workflow.py
